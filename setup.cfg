[metadata]
name = pyaetherometry
author = PyAetherometry Developers
author_email = 
license = GNU GPL v3+
license_file = licenses/LICENSE.rst
url = http://docs.pyaetherometry.org
description = PyAetherometry is an community-developed free and open source Python package that provides common functionality required for aetherometric physics in a single, reliable codebase.
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = True
github_project = pyaetherometry/pyaetherometry

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    []

[options.entry_points]

all =
    []
test =
    pytest-pyaetherometry
docs =
    sphinx-pyaetherometry

[options.package_data]
pyaetherometry = data/*

[tool:pytest]
testpaths = "pyaetherometry" "docs"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    pyaetherometry/conftest.py
    pyaetherometry/*setup_package*
    pyaetherometry/tests/*
    pyaetherometry/*/tests/*
    pyaetherometry/extern/*
    pyaetherometry/version*
    */pyaetherometry/conftest.py
    */pyaetherometry/*setup_package*
    */pyaetherometry/tests/*
    */pyaetherometry/*/tests/*
    */pyaetherometry/extern/*
    */pyaetherometry/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
